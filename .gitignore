## Ignore arquivos temporários do Visual Studio, construa resultados e
## arquivos gerados por complementos populares do Visual Studio.
##
## Receba mais informações sobre https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Arquivos específicos do usuário
*.rsuser
*.suo
*.utilizador
*.userosscache
*.sln.docstates

# Arquivos específicos do usuário (MonoDevelop/Xamarin Studio)
*.userprefs

# Arquivos gerados por mono auto
mono_crash.*

# Construir resultados
[Dd] por exemplo/
[Dd] ebugPublic/
[Rr] elease/
[Rr] eleases/
x64/
x86/
[Ww] [Ii] [Nn] 32/
[Aa] [Rr] [Mm]/
[Aa] [Rr] [Mm] 64/
Bld/
[Bb] em/
[Oo] bj/
[Ll] Og/
[Ll] ogs/

# Visual Studio 2015/2017 cache/opções diretório
.Vs/
# Descomisso se você tiver tarefas que criam os arquivos estáticos do projeto em wwwroot
#wwwroot/

# Arquivos gerados pelo Visual Studio 2017
Arquivos\gerados/

# Resultados do teste MSTest
[Tt] est[Rr]esult*/
[Bb] uild[Ll]og.*

# NUnit
*. VisualState.xml
Resultados de teste.xml
nunit-*.xml

# Construir resultados de um projeto ATL
[Dd] ebugPS/
[Rr] eleasePS/
dlldata.c

# Resultados de benchmark
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
Artefatos/

#ASP.NET Andaimes
AndaimesLeme.txt

# StyleCop
StyleCopReport.xml

# Arquivos construídos pelo Visual Studio
*_i.c.
*_p.c.
*_h.h
*.laia
*.meta
*.Obj
*.iobj
*.Pch
*..pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# Pasta de trabalho MFractors (ferramenta de produtividade Xamarin)
.mfractor/

# História Local para Estúdio Visual
.localhistory/

# Arquivos visual Studio History (VSHistory)
.vshistory/

# Banco de dados temporários beatPulse healthcheck
healthchecksdb

# Pasta de backup para ferramenta conversão de referência de pacotes no Visual Studio 2017
MigraçãoBackup/

# Ionide (plataforma cruzada F# VS Code ferramentas) pasta de trabalho
.ionida/

# Fody - esquema XML gerado automaticamente
FodyWeavers.xsd

# Arquivos vs code para aqueles que trabalham em várias ferramentas
.vscode/*
! .vscode/configurações.json
! .vscode/tasks.json
! .vscode/launch.json
! .vscode/extensions.json
*.code-workspace

# História local para código de estúdio visual
.história/

# Arquivos do Instalador de Janelas a partir de saídas de compilação
*..cab
*..msi
*.msix
*.Msm
*.Msp

# JetBrains Rider
*.sln.iml